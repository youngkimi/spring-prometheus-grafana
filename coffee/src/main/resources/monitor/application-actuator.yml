management:
  endpoints:
    # 기본적으로는 shut-down 제외 모두 enabled
    # 보안 상의 이유로 default를 false로 설정 후,
    # 사용을 희망하는 endpoint에 대해서만 enable 하자. (화이트리스트)
    # enable 한다고 바로 사용할 수 있는 것은 아니다.
    # expose 해주어야 한다.
    # Web 의 경우는 health 만 기본적으로 expose 되어있다.
    enabled-by-default: false
    web:
      exposure:
        # set exposure endpoints
        # 일반적으로 env endpoint enable/expose 시 주의해야 한다.
        # 학습 프로젝트인만큼 exposure 하겠다.
        # wildcard를 사용할 수 있으나, 사용을 지양한다.
        include: health,info,env,metrics,mappings,prometheus
      base-path: '/system'
    # 앞서 말했듯, JMX/Web은 expose default method의 설정이 다르다.
    # 따라서 JMX를 사용하지 않을 것이라면 JMX는 모조리 disable 하자.
    jmx:
      exposure:
        exclude: '*'
  endpoint:
    # never: status (up, down)
    # always: disk space, path, ping ...
    health:
      # set endpoint enabled
      enabled: true
      show-details: always
    # never: env value는 ***으로 마스킹 되어 출력된다.
    # always: env value 모두 출력된다.
    env:
      enabled: true
      show-values: always
    # 어플리케이션의 메트릭 정보 표시
    metrics:
      enabled: true
    # Git 에 대한 정보를 다룬다.
    # 추가적인 Git 설정이 필요하다.
    info:
      enabled: true
    # RequestMapping의 모든 경로 표시
    mappings:
      enabled: true
    # Prometheus 서버에서 스크랩할 수 있는 형식으로 변환.
    # `micrometer-registry-prometheus`의 dependency가 필요.
    prometheus:
      enabled: true

  server:
    port: 9090

# Actuator는 서버에 대한 다양한 정보를 다룬다. 보안에 주의를 더 기울여야 한다.
# 1. management port와 service port를 분리하자.
# 2. Actuator 접근 시, Security 등을 활용하여 인증과 권한 여부를 검사하자.
# 3. Actuator Default 경로를 사용하지 않고, base-path를 변경하여 운영한다.